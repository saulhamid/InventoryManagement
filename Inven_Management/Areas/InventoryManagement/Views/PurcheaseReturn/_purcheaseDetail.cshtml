@model InventoryViewModel.Models.PurcheaseReturnDetail
@using UIHelper.MVC
<tr class="pa">
@using (Html.BeginCollectionItem("PurcheaseReturnDetailVM"))
{
    @Html.HiddenFor(model=>model.ProductId);
    <td style="width:10%"><a class="Edit-row i-btn-edit-row" onclick="EditRow(this)"></a><a class="remove-row i-btn-remove-row" onclick="removerow(this)"></a></td>
    <td style="width:10%">@Html.TextBoxFor(model => model.Code, new { @placeholder = " Product Name", @class = "pname  form-control", @readonly = "disable" })</td>
    <td style="width:15%">@Html.TextBoxFor(model => model.Name, new { @placeholder = " Product Name", @class = "pname  form-control", @readonly = "disable" })</td>
    <td style="width:8%">@Html.TextBoxFor(model => model.UnitePrice, new { @placeholder = " Product UnitePrice", @class = "unit center form-control", @readonly = "disable" })</td>
    <td style="width:8%">@Html.TextBoxFor(model => model.Quantity, new { @placeholder = " Product Quantity", @class = "qty center form-control" })</td>
    <td style="width:8%">@Html.TextBoxFor(model => model.Discount, new { @placeholder = " Product Discount", @class = "disc center form-control" })</td>
    <td style="width:20%">@Html.TextBoxFor(model => model.TotalPrice, new { @placeholder = " Product Amount", @class = "amount right form-control", @readonly = "disable" })</td>
}
</tr>
<script>
 
    $(".qty").change(function () {
        calculation();
    });
    $(".disc").change(function () {
        calculation();
    });
</script>